/api/login -> Hacer login de un usuario o registrarlo si es el primer login
REQUIERE
    headers:
        key: token, descripcion: token de acceso temporal a firebase
DEVUELVE
    400 -> si no existe una key 'token' en los headers o si la request no es POST
    404 -> si existe alguna discrepancia con firebase (no se encuentra el usuario en firebase)
    200 -> si el usuario ya estaba en el sistema y en firebase
    201 -> si el usuario es nuevo y no estaba en el sistema

/api/get_user_profile -> Cargar informacion de perfil acerca de un usuario
REQUIERE
    headers:
        key: token, descripcion: token de acceso temporal a firebase
    body:
        key: uid, descripcion: uid del usuario en firebase
DEVUELVE
    400 -> si no existe una key 'token' en los headers o si la request no es POST
    404 -> si no se ha encontrado ningun usuario con ese uid
    401 -> si el usuario que hace la peticion no esta logeado en el sistema
    200 -> si el usuario se ha encontrado
        body:
            key: uid
            key: nombre
            key: esta_baneado
            key: usuario_valorado_estrella: (lista)
                key: estrellas
                key: usuario_valorado
                    key: uid
                    key: nombre
                key: usuario_que_valora
                    key: uid
                    key: nombre
            key: producto_del_usuario: (lista)
                key: vendido_por
                    key: uid
                    key: nombre
                key: tiene_tags (lista)
                    key: nombre
                key: contenido_multimedia (lista)
                    key: contenido